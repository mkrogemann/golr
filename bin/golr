#!/usr/bin/env ruby

require 'golr'
require 'optparse'

options = { :generations => 100 }

optparse = OptionParser.new do |opts|
  opts.banner =
  "\nUsage: golr game-file [options]\n\nValid options are\n"

  opts.on("-h", "--help", "Print this help") do |h|
    puts opts.banner
    puts opts.summarize
    puts "\n"
    exit 0
  end

  opts.on("-g", "--generations [NUMBER]", "Evolve game through this many generations [defaults to 100]") do |g|
    options[:generations] = g.to_i
  end
  opts.on("--time-only", "Do not produce game output, just total runtime for benchmarking") do |time_only|
    options[:time_only] = true
  end
end

optparse.parse!

# load game from file
game_file = ARGV[0]
begin
  if game_file.nil?
    puts "You have to specify a game file. Try 'golr -h' for help"
    exit 1
  end
  game_string = File.read(game_file)
  game = Golr::GameReader.from_string(game_string)
rescue Errno::ENOENT, Errno::EACCES => e
  puts "Cannot read file \"#{game_file}\" - Does it exist and is it readable?"
  exit 1
end

# evolve through generations
generations = options[:generations]
generation = 1

if options[:time_only]
  time_then = Time.new
  generations.times.each { game.evolve; generation += 1 }
  puts "#{Time.now - time_then}s elapsed for #{generation - 1} generations"
else
  puts 'Generation #0'
  Golr::GamePrinter.print(game)
  generations.times.each do
    game.evolve
    puts "Generation \##{generation}"
    Golr::GamePrinter.print(game)
    generation += 1
  end
end
